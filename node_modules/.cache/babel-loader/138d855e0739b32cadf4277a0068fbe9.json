{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Downloads\\\\quiz-app-master (2)\\\\quiz-app-master\\\\src\\\\components\\\\quiz\\\\Quiz.js\";\nimport React from 'react';\nimport QuizEntry from './QuizEntry/QuizEntry';\nimport QuizQuestion from './QuizQuestion/QuizQuestion';\nimport QuizFinish from './QuizFinish/QuizFinish';\nimport './Quiz.css';\nimport MainMenu from \"./Menus/MainMenu\";\nimport axios from \"axios\";\n\nclass Quiz extends React.Component {\n  constructor(props) {\n    console.log(\"constructor app\");\n    super(props);\n\n    this.renderQuizDisplay = () => {\n      // console.log(\"render QuizDisplay\")\n      if (this.props.page === -1) {\n        //Main Menu\n        return /*#__PURE__*/React.createElement(MainMenu, {\n          handleNameSubmission: this.props.handleNameSubmission,\n          setPlayerName: this.props.setPlayerName,\n          playerName: this.props.playerName,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 11\n          }\n        });\n      } else if (this.props.page === 0) {\n        //Quiz entry\n        return /*#__PURE__*/React.createElement(QuizEntry, {\n          handlePageNext: this.props.handlePageNext,\n          gameQuestionsType: this.props.gameQuestionsType,\n          handleTypeChange: this.props.handleTypeChange,\n          handleQuestionsAmountChange: this.props.handleQuestionsAmountChange,\n          handleDifficultyChange: this.props.handleDifficultyChange,\n          playerName: this.props.playerName,\n          difficulty: this.props.difficulty,\n          amountOfQuestions: this.props.amountOfQuestions,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 14\n          }\n        });\n      } //Ask questions as the amount of questions defined at the beginning.\n      else if (this.props.qNum !== Number(this.props.amountOfQuestions) + 1) {\n        return /*#__PURE__*/React.createElement(QuizQuestion, {\n          page: this.props.page,\n          qNum: this.props.qNum,\n          handlePageNext: this.props.handlePageNext,\n          numCorrectAnswers: this.props.numCorrectAnswers,\n          numIncorrectAnswers: this.props.numIncorrectAnswers,\n          handleAnswer: this.props.handleAnswer,\n          handleAnswerSubmission: this.props.handleAnswerSubmission,\n          score: this.props.score,\n          gameQuestionsType: this.props.gameQuestionsType,\n          amountOfQuestions: this.props.amountOfQuestions,\n          difficulty: this.props.difficulty // isActive={this.props.isActive}\n          ,\n          secondsElapsed: this.props.secondsElapsed,\n          startTime: this.props.startTime,\n          resetTime: this.props.resetTime,\n          pauseTime: this.props.pauseTime,\n          getSeconds: this.props.getSeconds,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 11\n          }\n        });\n      } else {\n        //No more questions to ask.\n        return /*#__PURE__*/React.createElement(QuizFinish, {\n          numCorrectAnswers: this.props.numCorrectAnswers,\n          reset: this.props.reset,\n          endGame: this.props.endGame,\n          score: this.props.score,\n          amountOfQuestions: this.props.amountOfQuestions,\n          playerName: this.props.playerName,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 14\n          }\n        });\n      }\n    };\n\n    axios.post('http://localhost:2000/logOutEveryOne', {});\n  }\n\n  render() {\n    // console.log(\"render quiz\")\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid quizContainer\",\n      style: {\n        backgroundImage: `url('texture.png')`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, this.renderQuizDisplay());\n  }\n\n}\n\nexport default Quiz;","map":{"version":3,"sources":["C:/Users/Administrator/Downloads/quiz-app-master (2)/quiz-app-master/src/components/quiz/Quiz.js"],"names":["React","QuizEntry","QuizQuestion","QuizFinish","MainMenu","axios","Quiz","Component","constructor","props","console","log","renderQuizDisplay","page","handleNameSubmission","setPlayerName","playerName","handlePageNext","gameQuestionsType","handleTypeChange","handleQuestionsAmountChange","handleDifficultyChange","difficulty","amountOfQuestions","qNum","Number","numCorrectAnswers","numIncorrectAnswers","handleAnswer","handleAnswerSubmission","score","secondsElapsed","startTime","resetTime","pauseTime","getSeconds","reset","endGame","post","render","backgroundImage"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport QuizEntry from './QuizEntry/QuizEntry';\nimport QuizQuestion from './QuizQuestion/QuizQuestion';\nimport QuizFinish from './QuizFinish/QuizFinish';\nimport './Quiz.css';\nimport MainMenu from \"./Menus/MainMenu\";\nimport axios from \"axios\";\n\n\n\nclass Quiz extends React.Component {\n\n    constructor(props) {\n        console.log(\"constructor app\")\n\n        super(props);\n        axios.post('http://localhost:2000/logOutEveryOne', {})\n    }\n\n  renderQuizDisplay = () => {\n    // console.log(\"render QuizDisplay\")\n    if (this.props.page === -1) {//Main Menu\n      return (\n          <MainMenu\n              handleNameSubmission={this.props.handleNameSubmission}\n              setPlayerName={this.props.setPlayerName}\n              playerName={this.props.playerName}\n          />\n      )\n    }\n\n    else if (this.props.page === 0) {//Quiz entry\n\n      return <QuizEntry\n          handlePageNext={this.props.handlePageNext}\n          gameQuestionsType={this.props.gameQuestionsType}\n          handleTypeChange={this.props.handleTypeChange}\n          handleQuestionsAmountChange={this.props.handleQuestionsAmountChange}\n          handleDifficultyChange={this.props.handleDifficultyChange}\n          playerName={this.props.playerName}\n          difficulty={this.props.difficulty}\n          amountOfQuestions={this.props.amountOfQuestions}\n      />\n    }\n    //Ask questions as the amount of questions defined at the beginning.\n    else if ( this.props.qNum !== (Number(this.props.amountOfQuestions)+1))\n    {\n      return (\n          <QuizQuestion\n              page={this.props.page}\n              qNum={this.props.qNum}\n              handlePageNext={this.props.handlePageNext}\n              numCorrectAnswers={this.props.numCorrectAnswers}\n              numIncorrectAnswers={this.props.numIncorrectAnswers}\n              handleAnswer={this.props.handleAnswer}\n              handleAnswerSubmission={this.props.handleAnswerSubmission}\n              score={this.props.score}\n              gameQuestionsType={this.props.gameQuestionsType}\n              amountOfQuestions={this.props.amountOfQuestions}\n              difficulty={this.props.difficulty}\n\n              // isActive={this.props.isActive}\n              secondsElapsed={this.props.secondsElapsed}\n\n              startTime={this.props.startTime}\n              resetTime={this.props.resetTime}\n              pauseTime={this.props.pauseTime}\n              getSeconds={this.props.getSeconds}\n          />\n      )\n    }\n    else {\n        //No more questions to ask.\n      return <QuizFinish\n          numCorrectAnswers={this.props.numCorrectAnswers}\n          reset={this.props.reset}\n          endGame={this.props.endGame}\n          score={this.props.score}\n          amountOfQuestions={this.props.amountOfQuestions}\n          playerName={this.props.playerName}\n      />\n    }\n  }\n  render() {\n    // console.log(\"render quiz\")\n    return (\n        <div className=\"container-fluid quizContainer\" style={{ backgroundImage: `url('texture.png')`}}>\n          {this.renderQuizDisplay()}\n        </div>\n    );\n  }\n}\nexport default Quiz;\n"]},"metadata":{},"sourceType":"module"}